@model Trip_Advisor_Web.Models.PlaceModel

@{
    ViewBag.Title = "Place";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@Styles.Render("~/Content/PlaceStyles.css")

<div class="placeDescription jumbotron ">
    <h1>@Model.Name</h1>
    <p>@Model.Description</p>
    @*<p>@Model.PlaceId</p>*@

    @*<p><a class="btn btn-primary btn-lg" href="#" role="button">Learn more</a></p>*@
</div>

<div class="container action-group">
    <div class="btn-group">      
        @Html.ActionLink("I plan to visit", "UserPlansToVisitPlace", "Place", new { userId = (int)Session["Id"], placeId = Model.PlaceId }, new { @class = "btn btn-primary" })
      
        @Html.ActionLink("I visited", "UserVisitedPlace", "Place", new { userId = (int)Session["Id"], placeId = Model.PlaceId }, new { @class = "btn btn-primary" })

        @Html.ActionLink("Show nearby similar", "GetSimilarPlaces", "Place", new { userId = (int)Session["Id"], placeId = Model.PlaceId }, new { @class = "btn btn-primary" })
    </div>
</div>

<br />

<div id="myCarousel" class="carousel slide" data-ride="carousel">
    <!-- Indicators -->
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        @for (int i = 1; i < Model.Pictures.Count; i++)
        {
            <li data-target="#myCarousel" data-slide-to="@i"></li>
        }
    </ol>

    <!-- Wrapper for slides -->
    <div class="carousel-inner" role="listbox">
        <div class="item active">
            <img src="@Url.Content(Model.Pictures.First())" alt="Image" />
        </div>
        @if (Model.Pictures.Count != 0)
        {
            for (int i = 1; i < Model.Pictures.Count; i++)
            {
                <div class="item">
                    <img src="@Url.Content(Model.Pictures[i])">
                </div>
            }
        }
    </div>

    <!-- Left and right controls -->
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<br />
<br />
<br />

<div class="container">
    <div class="panel panel-primary">
        <div class="panel-heading panel-info">
            Additional info
        </div>
        <div class="panel-body">
            <p><b>Location: </b>@Model.PlaceLocation.Name </p>
            <p><b>Distance from the city:</b> @Model.CityCenterDistance</p>
            <p><b>Rating:</b> @Model.Rating</p>

        </div>
    </div>
</div>



<br />
<div class="container">
    <div class="recommCont" id="recommendations">
        <h1>Recommendations</h1>
        <p>
            @for (int i = 0; i < Model.Recommendations.Count; i++)
            {
                <div class="panel panel-primary" id=@Model.Recommendations[i].RecommendationId>
                    <div class="panel-heading panel-info recommendation-panel">
                        @Html.ActionLink(@Model.Recommendations[i].RefferedBy.Username, "ReturnUserPanel", "User", new { userId = Model.Recommendations[i].RefferedBy.UserId }, new { @class = "link" })
                    </div>
                    <div class="panel-body ">
                        @Model.Recommendations[i].Comment
                    </div>
                    <div class="panel-footer panel-primary">
                        <b>Rating: </b>@Model.Recommendations[i].Rating
                        <b>Last modified:</b>@Model.Recommendations[i].RecommendationTime
                    </div>
                    <div>
                        @*@Html.ActionLink("Modify", "ReturnCity", "City", new { recommendationId = @Model.Recommendations[i].RecommendationId }, null)*@
                        @if (Model.Recommendations[i].RefferedBy.Username == (string)Session["Username"] || (int)Session["Status"] >= 9)
                        {
                            @*@Html.ActionLink("Delete", "DeleteRecommendation", "Place", new { recommendationId = Model.Recommendations[i].RecommendationId, placeId = Model.PlaceId }, new { @class = "btn btn-danger" })*@
                            <button type="button" name="Delete" id="deleteBtn" onclick="deleteRec(@Model.Recommendations[i].RecommendationId, @Model.PlaceId)" class="btn btn-danger">Delete</button>
                        }
                    </div>
                </div>
            }
        </p>


        @if (Model.CurrentUserRecommends && (int)Session["Status"] < 9)
        {
            <div id="upl"><label class="nnt"></label><button id="recommendRequest" style="display: none;" class="btn btn-danger"  data-toggle="modal" data-target=".bs-example-modal-sm">Recommend</button></div>
        }
        else
        {
            <div id="upl"><label class="nnt"></label><button id="recommendRequest" class="btn btn-danger" data-toggle="modal" data-target=".bs-example-modal-sm">Recommend</button></div>
        }


        <div id="mdl" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
            <div class="modal-dialog modal-sm">
                <div class="modal-content form-horizontal">
                    <br />
                    @using (Html.BeginForm("RecommendPlace", "Place", new { userId = (int)Session["Id"], placeId = Model.PlaceId }, FormMethod.Post, new { enctype = "multipart/form-data", id = "submitForm", @class="form-horizonta" }))
                    {
                        <div id="recommendationAdd">
                            @Html.Hidden("recommendationComment", "", new { id = "recommendationComment" })
                            @Html.Hidden("recommendationRating", "", new { id = "recommendationRating" })
                            <label class="lbl">Comment: &nbsp;</label><textarea id="recommendationText" class="form-control fc"></textarea>
                   
                            @*<span> <label class="lbl">Rating (1 to 10)</label><input type="number" id="ratingValue" class="form-control fc" /></span>*@
                            <span>
                                 <select id="ratingValue" form="submitForm">
                                    <option value=1>1</option>
                                     <option value=2>2</option>
                                     <option value=3>3</option>
                                     <option value=4>4</option>
                                     <option value=5 selected>5</option>
                                     <option value=6>6</option>
                                     <option value=7>7</option>
                                     <option value=8>8</option>
                                     <option value=9>9</option>
                                     <option value=10>10</option>
                                 </select>
                            </span>
            
                            <br />                 
                            <input type="submit" id="recommendPlaceRequest" value="Recommend" class="btn btn-danger fc" onclick="SomeFunction()" />

                        </div>
                    }
                </div>
            </div>
        </div>



    </div>
</div>

<script>
  

</script>

@Scripts.Render("~/Scripts/TripAdvisorScripts/RecommendationScript.js")

